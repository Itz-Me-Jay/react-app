trigger:
- main

resources:
- repo: self

pool:
  name: project-pool 

variables:
  # Container registry service connection established during pipeline creation
  containerregistrytype: 'Azure Container Registry'
  azureContainerRegistry: '{"loginServer":"registrytestt.azurecr.io", "id" : "/subscriptions/f9975a12-2adb-465a-a9c1-83e85eabbfc5/resourceGroups/React/providers/Microsoft.ContainerRegistry/registries/registrytestt"}'
  imageRepository: 'project1React'
  containerRegistry: 'reactacr1.azurecr.io'
  dockerfile: '$(Build.SourcesDirectory)/Dockerfile' 
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build and Push Image  
  jobs:
  - job: BuildAndPush
    steps:
    - task: Docker@2 
      displayName: Build an image
      inputs:
        containerregistrytype: 'Azure Container Registry'
        repository: $(imageRepository)
        command: 'build'
        Dockerfile: '$(Build.SourcesDirectory)/Dockerfile' 
        tags: |
          $(tag)

    - task: Docker@2
      displayName: Push to ACR
      inputs:
        containerregistrytype: 'Azure Container Registry'
        repository: $(imageRepository)
        command: 'push'
        tags: |
          $(tag)

- stage: Deploy 
  displayName: Deploy Stack
  jobs:
  - job: DeployStack
    steps:
    - checkout: self 
      persistCredentials: true 

    - task: Bash@3 # Assuming Linux agent
      displayName: 'Deploy Docker Stack'
      inputs:
        targetType: inline 
        script: |
          docker stack deploy -c docker-compose.yml nginx-react 
